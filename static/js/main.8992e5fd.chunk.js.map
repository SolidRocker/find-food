{"version":3,"sources":["img/eatbook.png","img/facebook.png","img/instagram.png","img/thesmartlocal.png","img/star.png","components/mapContainer/mapContainerReducer.js","components/filterSection/filterSectionReducer.js","redux/index.js","redux/types.js","redux/store.js","components/infoSection/infoSection.js","components/mapContainer/mapContainerActions.js","components/filterSection/filterSection.js","components/filterSection/filterSectionActions.js","components/mapContainer/mapContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","dataState","places","selectedPlace","hasSelection","filterType","filterData","hasFilterType","hasFilterData","masterCategoryList","categoryList","zoneList","combineReducers","mapContainer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","hasPayload","filterSection","payloadShowFilterData","middleware","thunk","store","createStore","rootReducer","applyMiddleware","apply","InfoSection","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","window","innerHeight","innerWidth","str","result","split","forEach","elem","includes","push","react_default","a","createElement","href","props","className","infoString","infoVar","hasOwnProperty","fa","convertStringToLinks","hasEatBookArticle","hasFB","hasInsta","hasTSLArticle","hasTSLReviews","EatBookArticle","FacebookPage","Instagram","TSLArticle","TSLReviews","src","require","alt","isMobile","EntryName","MasterCategory","Category","renderElements","EntryDescription","OpeningHours","ContactNumber","Website","ContactEmail","EntryAddress","Zone","renderExternalLinks","renderDefaultText","Component","connect","hasData","data_","updateSelectedPlace","dispatch","filterBy","FilterSection","_getPrototypeOf2","_this","_len","args","Array","_key","call","concat","onSelectFilterType","option","selectFilterType","label","onSelectFilterData","selectFilterData","dist_default","arrowClosed","arrowOpen","options","onChange","placeholder","controlClassName","menuClassName","showFilterData","mapStylesPC","width","height","mapStylesSP","MapContainer","onMarkerClick","marker","e","placeData","latitude","longitude","distance","location","varStr","setState","substr","fetchPlaces","place","google_maps_react_dist","EntryID","title","name","position","lat","Latitude","lng","Longitude","onClick","_this2","google","zoom","style","initialCenter","map","renderMarkers","fetch","then","res","json","data","i","indexOf","GoogleApiWrapper","apiKey","App","es","infoSection_infoSection","filterSection_filterSection","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8992e5fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eatbook.43510351.png\";","module.exports = __webpack_public_path__ + \"static/media/facebook.4a668b2f.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram.5517c24f.png\";","module.exports = __webpack_public_path__ + \"static/media/thesmartlocal.29d6ed25.png\";","module.exports = __webpack_public_path__ + \"static/media/star.56e829f8.png\";","import {\r\n    FETCH_PLACES,\r\n    UPDATE_SELECTED_PLACE\r\n } from '../../redux/types';\r\n    \r\nconst dataState = {\r\n    places: [],\r\n    selectedPlace: {},\r\n    hasSelection: false\r\n}\r\n\r\nexport default function(state = dataState, action) {\r\n    switch(action.type) {\r\n        case FETCH_PLACES:\r\n            return {\r\n                ...state,\r\n                places: action.payload,\r\n            }\r\n        case UPDATE_SELECTED_PLACE:\r\n            return {\r\n                ...state,\r\n                selectedPlace: action.payload,\r\n                hasSelection: action.hasPayload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n","import {\r\n    SELECT_FILTER_TYPE,\r\n    SELECT_FILTER_DATA,\r\n } from '../../redux/types';\r\n    \r\nconst dataState = {\r\n    filterType: \"Filter By...\",\r\n    filterData: \"Select...\",\r\n    hasFilterType: false,\r\n    hasFilterData: false,\r\n\r\n    masterCategoryList: [],\r\n    categoryList: [],\r\n    zoneList: []\r\n}\r\n\r\nexport default function(state = dataState, action) {\r\n    switch(action.type) {\r\n        case SELECT_FILTER_TYPE:\r\n            return {\r\n                ...state,\r\n                filterType: action.payload,\r\n                hasFilterType: action.payloadShowFilterData,\r\n                hasFilterData: false,\r\n                filterData: \"Select...\"\r\n            }\r\n        case SELECT_FILTER_DATA:\r\n            return {\r\n                ...state,\r\n                filterData: action.payload,\r\n                hasFilterData: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport mapContainerReducer from '../components/mapContainer/mapContainerReducer';\r\nimport filterSectionReducer from '../components/filterSection/filterSectionReducer';\r\n\r\nexport default combineReducers({\r\n    mapContainer: mapContainerReducer,\r\n    filterSection: filterSectionReducer\r\n})","export const FETCH_PLACES = 'FETCH_PLACES';\r\nexport const UPDATE_SELECTED_PLACE = 'UPDATE_SELECTED_PLACE';\r\nexport const SELECT_FILTER_TYPE = 'SELECT_FILTER_TYPE';\r\nexport const SELECT_FILTER_DATA = 'SELECT_FILTER_DATA';","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './index';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './infoSection.css';\r\n\r\nimport {\r\n    FaCommentAlt,\r\n    FaClock,\r\n    FaPhone,\r\n    FaGlobeAmericas,\r\n    FaEnvelope,\r\n    FaHome,\r\n    FaMapMarker\r\n} from 'react-icons/fa';\r\n\r\nexport class InfoSection extends Component {\r\n\r\n    isMobile() {\r\n        return (window.innerHeight / window.innerWidth) > 1.6;\r\n    }\r\n\r\n    // Find hyperlinks in the string and convert them into clickable links.\r\n    convertStringToLinks(str) {\r\n        let result = [];\r\n        let input = str.split(' ');\r\n\r\n        input.forEach(elem => {\r\n            if(elem.includes(\"http://\") || elem.includes(\"https://\")) {\r\n                result.push(<a key={result.length} href={elem}>{elem}</a>);\r\n            }\r\n            else {\r\n                result.push(elem);\r\n            }\r\n            result.push(' ');\r\n        });\r\n        return result;\r\n    }\r\n\r\n    renderDefaultText() {\r\n        if(this.props.places.length < 1) {\r\n            return <div className=\"info-section-default-text\">No places nearby. Are you sure you have the right coordinates?</div>\r\n        }\r\n        return <div className=\"info-section-default-text\">Click on a pin to start looking!</div>\r\n        }\r\n    \r\n    renderElements(infoString, infoVar) {\r\n        if(this.props.selectedPlace.hasOwnProperty(infoString) && infoVar !== \"-\" && infoVar !== \"\") {\r\n\r\n            switch(infoString) {\r\n\r\n                case \"EntryDescription\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaCommentAlt/> </span>\r\n                            <span>{this.convertStringToLinks(infoVar)}</span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                case \"OpeningHours\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaClock/> </span>\r\n                            <span>{infoVar}</span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                case \"ContactNumber\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaPhone/> </span>\r\n                            <span>{infoVar}</span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                case \"Website\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaGlobeAmericas/> </span>\r\n                            <span>{this.convertStringToLinks(infoVar)}</span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                case \"ContactEmail\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaEnvelope/> </span>\r\n                            <span><a href={\"mailto:\"+infoVar}>{infoVar}</a></span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                case \"EntryAddress\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaHome/> </span>\r\n                            <span>{infoVar}</span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                case \"Zone\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaMapMarker/> </span>\r\n                            <span>{infoVar}</span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                default:\r\n                    return null;\r\n            }\r\n\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Render all the external links together if they exist.\r\n    renderExternalLinks() {\r\n        var hasEatBookArticle = false;\r\n        var hasFB = false;\r\n        var hasInsta = false;\r\n        var hasTSLArticle = false;\r\n        var hasTSLReviews = false;\r\n\r\n        if(this.props.selectedPlace.hasOwnProperty(\"EatBookArticle\") &&\r\n            this.props.selectedPlace.EatBookArticle !== \"-\" &&\r\n            this.props.selectedPlace.EatBookArticle !== \"\") {\r\n                hasEatBookArticle = true;\r\n        }\r\n\r\n        if(this.props.selectedPlace.hasOwnProperty(\"FacebookPage\") &&\r\n            this.props.selectedPlace.FacebookPage !== \"-\" &&\r\n            this.props.selectedPlace.FacebookPage !== \"\") {\r\n                hasFB = true;\r\n        }\r\n\r\n        if(this.props.selectedPlace.hasOwnProperty(\"Instagram\") &&\r\n            this.props.selectedPlace.Instagram !== \"-\" &&\r\n            this.props.selectedPlace.Instagram !== \"\") {\r\n                hasInsta = true;\r\n        }\r\n\r\n        if(this.props.selectedPlace.hasOwnProperty(\"TSLArticle\") &&\r\n            this.props.selectedPlace.TSLArticle !== \"-\" &&\r\n            this.props.selectedPlace.TSLArticle !== \"\") {\r\n                hasTSLArticle = true;\r\n        }\r\n\r\n        if(this.props.selectedPlace.hasOwnProperty(\"TSLReviews\") &&\r\n            this.props.selectedPlace.TSLReviews !== \"-\" &&\r\n            this.props.selectedPlace.TSLReviews !== \"\") {\r\n                hasTSLReviews = true;\r\n        }\r\n\r\n        return (\r\n            <div className=\"info-section-info-sm\">\r\n                {hasEatBookArticle &&\r\n                    <span>\r\n                        <a href={this.props.selectedPlace.EatBookArticle}>\r\n                            <img\r\n                                src={require(\"../../img/eatbook.png\")}\r\n                                alt={\"Eatbook\"}\r\n                                className=\"info-section-icon-sm\"\r\n                            /> \r\n                        </a>\r\n                    </span>\r\n                }\r\n                {hasFB &&\r\n                    <span>\r\n                        <a href={this.props.selectedPlace.FacebookPage}>\r\n                            <img\r\n                                src={require(\"../../img/facebook.png\")}\r\n                                alt={\"Facebook\"}\r\n                                className=\"info-section-icon-sm\"\r\n                            /> \r\n                        </a>\r\n                    </span>\r\n                }\r\n                {hasInsta &&\r\n                    <span>\r\n                        <a href={this.props.selectedPlace.Instagram}>\r\n                            <img\r\n                                src={require(\"../../img/instagram.png\")}\r\n                                alt={\"Instagram\"}\r\n                                className=\"info-section-icon-sm\"\r\n                            /> \r\n                        </a>\r\n                    </span>\r\n                }\r\n                {hasTSLArticle &&\r\n                    <span>\r\n                        <a href={this.props.selectedPlace.TSLArticle}>\r\n                            <img\r\n                                src={require(\"../../img/thesmartlocal.png\")}\r\n                                alt={\"TheSmartLocal Article\"}\r\n                                className=\"info-section-icon-sm\"\r\n                            /> \r\n                        </a>\r\n                    </span>\r\n                }\r\n                {hasTSLReviews &&\r\n                    <span>\r\n                        <a href={this.props.selectedPlace.TSLReviews}>\r\n                            <img\r\n                                src={require(\"../../img/star.png\")}\r\n                                alt={\"TheSmartLocal Reviews\"}\r\n                                className=\"info-section-icon-sm\"\r\n                            /> \r\n                        </a>\r\n                    </span>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.props.hasSelection) {\r\n            return (\r\n                <div className={this.isMobile() ? \"info-section-sp\" : \"info-section\"}>\r\n                    <div className=\"info-section-headerbg\">\r\n                        <div className=\"info-section-header\">{this.props.selectedPlace.EntryName}</div>\r\n                        <div className=\"info-section-category\">{this.props.selectedPlace.MasterCategory}: {this.props.selectedPlace.Category}</div>\r\n                    </div>\r\n\r\n                    <div className=\"info-section-gap\"></div>\r\n\r\n                    {this.renderElements(\"EntryDescription\", this.props.selectedPlace.EntryDescription)}\r\n                    {this.renderElements(\"OpeningHours\", this.props.selectedPlace.OpeningHours)}\r\n                    {this.renderElements(\"ContactNumber\", this.props.selectedPlace.ContactNumber)}\r\n\r\n                    {this.renderElements(\"Website\", this.props.selectedPlace.Website)}\r\n                    {this.renderElements(\"ContactEmail\", this.props.selectedPlace.ContactEmail)}\r\n\r\n                    {this.renderElements(\"EntryAddress\", this.props.selectedPlace.EntryAddress)}\r\n                    {this.renderElements(\"Zone\", this.props.selectedPlace.Zone)}\r\n\r\n                    {this.renderExternalLinks()}\r\n\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className={this.isMobile() ? \"info-section-sp\" : \"info-section\"}>\r\n                 <div className=\"info-section-headerbg\">\r\n                    <div className=\"info-section-header\">Food Finder</div>\r\n                    <div className=\"info-section-category\">What's nice nearby?</div>\r\n                </div>\r\n                <div className=\"info-section-icon\">\r\n                    {this.renderDefaultText()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    places: state.mapContainer.places,\r\n    selectedPlace: state.mapContainer.selectedPlace,\r\n    hasSelection: state.mapContainer.hasSelection\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(InfoSection);","import {\r\n    FETCH_PLACES,\r\n    UPDATE_SELECTED_PLACE\r\n} from '../../redux/types';\r\n\r\nfunction hasData(data_) {\r\n    return data_ !== '' && data_ !== '-';\r\n}\r\n\r\nexport const fetchPlaces = (latitude, longitude, distance,\r\n                                masterCategoryList, categoryList, zoneList\r\n                            ) => dispatch => {\r\n\r\n    let path = 'https://appsbytsl.com/API/V1/Nearby/EatBook/tyler03/' + latitude + '/' + longitude + '/' + distance;\r\n    fetch(path)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n\r\n        // Extract Filter Data\r\n        for(var i = 0; i < data.length; ++i) {\r\n\r\n            // Use indexOf to see if filter exists, and only add if it doesn't\r\n            if( data[i].hasOwnProperty('MasterCategory') &&\r\n                hasData(data[i].MasterCategory) &&\r\n                masterCategoryList.indexOf(data[i].MasterCategory) === -1)\r\n            {\r\n                masterCategoryList.push(data[i].MasterCategory);\r\n            }\r\n\r\n            if( data[i].hasOwnProperty('Category') &&\r\n                hasData(data[i].Category) &&\r\n                categoryList.indexOf(data[i].Category) === -1) {\r\n                categoryList.push(data[i].Category);\r\n            }\r\n\r\n            if( data[i].hasOwnProperty('Zone') &&\r\n                hasData(data[i].Zone) &&\r\n                zoneList.indexOf(data[i].Zone) === -1) {\r\n                zoneList.push(data[i].Zone);\r\n            }\r\n        }\r\n        \r\n        dispatch({\r\n            type: FETCH_PLACES,\r\n            payload: data\r\n        })}\r\n    );\r\n}\r\n\r\nexport const updateSelectedPlace = (selectedPlace, hasSelection = true) => dispatch => {\r\n\r\n    dispatch({\r\n        type: UPDATE_SELECTED_PLACE,\r\n        payload: selectedPlace,\r\n        hasPayload: hasSelection\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Dropdown from 'react-dropdown'\r\nimport {selectFilterType, selectFilterData} from './filterSectionActions';\r\nimport {updateSelectedPlace} from '../mapContainer/mapContainerActions';\r\nimport './filterSection.css';\r\n\r\nimport {\r\n    FaCaretUp,\r\n    FaCaretDown,\r\n} from 'react-icons/fa';\r\n\r\nconst filterBy = [\r\n    \"Show All\",\r\n    \"Master Category\",\r\n    \"Category\",\r\n    \"Zone\"\r\n];\r\n\r\nexport class FilterSection extends Component {\r\n\r\n    isMobile() {\r\n        return (window.innerHeight / window.innerWidth) > 1.6;\r\n    }\r\n\r\n    onSelectFilterType = (option) => {\r\n        this.props.selectFilterType(option.label);\r\n    }\r\n\r\n    onSelectFilterData = (option) => {\r\n        this.props.selectFilterData(option.label);\r\n        this.props.updateSelectedPlace({}, false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.isMobile() ? \"filter-section-sp\" : \"filter-section\"}>\r\n                <div className={this.isMobile() ? \"filter-section-header-bg-sp\" : \"filter-section-header-bg\"}>\r\n                    <div className=\"filter-section-header\">Filters</div>\r\n                </div>\r\n\r\n                <div className=\"filter-section-gap\"></div>\r\n\r\n                <div className=\"filter-type-dropdown\">\r\n                    <Dropdown\r\n                        arrowClosed={<span className={this.isMobile() ? \"Dropdown-icon-sp\" : \"Dropdown-icon\"}><FaCaretDown/></span>}\r\n                        arrowOpen={<span className={this.isMobile() ? \"Dropdown-icon-sp\" : \"Dropdown-icon\"}><FaCaretUp/></span>}\r\n                        options={filterBy}\r\n                        onChange={this.onSelectFilterType}\r\n                        value={this.props.filterType}\r\n                        placeholder=\"Filter By...\"\r\n                        className=\"filter-list\"\r\n                        controlClassName=\"Dropdown-control\"\r\n                        menuClassName={this.isMobile() ? \"Dropdown-menu-type-sp\" : \"Dropdown-menu-type\"}\r\n                        />\r\n                </div>\r\n\r\n                \r\n                {this.props.hasFilterType &&\r\n                <div className=\"filter-data-dropdown\">\r\n                    <Dropdown\r\n                        arrowClosed={<span className={this.isMobile() ? \"Dropdown-icon-sp\" : \"Dropdown-icon\"}><FaCaretDown/></span>}\r\n                        arrowOpen={<span className={this.isMobile() ? \"Dropdown-icon-sp\" : \"Dropdown-icon\"}><FaCaretUp/></span>}\r\n                        options={\r\n                            this.props.filterType === \"Master Category\" ? this.props.masterCategoryList\r\n                            : this.props.filterType === \"Category\" ? this.props.categoryList\r\n                            : this.props.filterType === \"Zone\" ? this.props.zoneList : []\r\n                        }\r\n                        onChange={this.onSelectFilterData}\r\n                        value={this.props.filterData}\r\n                        placeholder=\"Sort By...\"\r\n                        className=\"filter-list\"\r\n                        controlClassName=\"Dropdown-control\"\r\n                        menuClassName={this.isMobile() ? \"Dropdown-menu-type-sp\" : \"Dropdown-menu-type\"}\r\n                    />\r\n                </div>\r\n                }\r\n                 \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    hasFilterType: state.filterSection.hasFilterType,\r\n    filterType: state.filterSection.filterType,\r\n    filterData: state.filterSection.filterData,\r\n\r\n    masterCategoryList: state.filterSection.masterCategoryList,\r\n    categoryList: state.filterSection.categoryList,\r\n    zoneList: state.filterSection.zoneList,\r\n});\r\n\r\nexport default connect(mapStateToProps, {selectFilterType, selectFilterData, updateSelectedPlace})(FilterSection);","import {\r\n    SELECT_FILTER_TYPE,\r\n    SELECT_FILTER_DATA,\r\n} from '../../redux/types';\r\n\r\nexport const selectFilterType = (filterType) => dispatch => {\r\n\r\n    let showFilterData = true;\r\n    if(filterType === \"Show All\") {\r\n        showFilterData = false;\r\n    }\r\n\r\n    //console.log(\"FT: \" + filterType);\r\n    dispatch({\r\n        type: SELECT_FILTER_TYPE,\r\n        payload: filterType,\r\n        payloadShowFilterData: showFilterData\r\n    })\r\n}\r\n\r\nexport const selectFilterData = (filterData) => dispatch => {\r\n    //console.log(\"FD: \" + filterData);\r\n    dispatch({\r\n        type: SELECT_FILTER_DATA,\r\n        payload: filterData,\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Map, GoogleApiWrapper, Marker} from 'google-maps-react';\r\nimport {fetchPlaces, updateSelectedPlace} from './mapContainerActions';\r\n\r\nconst mapStylesPC = {\r\n    width: '80%',\r\n    height: '100%'\r\n};\r\n\r\nconst mapStylesSP = {\r\n    width: '100%',\r\n    height: '70%'\r\n};\r\n\r\nexport class MapContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            latitude: 1.319190,\r\n            longitude: 103.857834,\r\n            distance: 3\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        if(window.location.href.includes('?')) {\r\n            let fullStr = window.location.href.split('?');\r\n            let varStr = fullStr[1].split('&');\r\n\r\n            this.setState({\r\n                latitude: varStr[0].substr(4),\r\n                longitude:varStr[1].substr(5),\r\n                distance: varStr[2].substr(5),\r\n            }, function() {\r\n                this.props.fetchPlaces(\r\n                    this.state.latitude,\r\n                    this.state.longitude,\r\n                    this.state.distance,\r\n                    this.props.masterCategoryList,\r\n                    this.props.categoryList,\r\n                    this.props.zoneList);\r\n            })\r\n        }\r\n        else {\r\n            this.props.fetchPlaces(\r\n                this.state.latitude,\r\n                this.state.longitude,\r\n                this.state.distance,\r\n                this.props.masterCategoryList,\r\n                this.props.categoryList,\r\n                this.props.zoneList);\r\n        }\r\n    }\r\n\r\n    onMarkerClick = (props, marker, e) => {\r\n        //console.log(props.placeData);\r\n        this.props.updateSelectedPlace(props.placeData);\r\n    }\r\n\r\n    isMobile() {\r\n        return (window.innerHeight / window.innerWidth) > 1.6;\r\n    }\r\n\r\n    renderMarkers(place) {\r\n        //console.log(place);\r\n\r\n        if(this.props.hasFilterData) {\r\n\r\n            if( this.props.filterType === \"Master Category\" &&\r\n                this.props.filterData !== place.MasterCategory) {\r\n                    return;\r\n            }\r\n\r\n            if( this.props.filterType === \"Category\" &&\r\n                this.props.filterData !== place.Category) {\r\n                    return;\r\n            }\r\n\r\n            if( this.props.filterType === \"Zone\" &&\r\n                this.props.filterData !== place.Zone) {\r\n                    return;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Marker\r\n                key={place.EntryID}\r\n                title={place.EntryName}\r\n                name={place.EntryName}\r\n                position={{lat: place.Latitude, lng: place.Longitude}}\r\n                placeData={place}\r\n                onClick={this.onMarkerClick}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Map\r\n                google={this.props.google}\r\n                zoom={14}\r\n                style={this.isMobile() ? mapStylesSP : mapStylesPC}\r\n                initialCenter={{\r\n                    lat: this.state.latitude,\r\n                    lng: this.state.longitude\r\n                }}\r\n            >\r\n\r\n            {this.props.places.map(place => this.renderMarkers(place))}\r\n            </Map>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    places: state.mapContainer.places,\r\n    selectedPlace: state.mapContainer.selectedPlace,\r\n\r\n    masterCategoryList: state.filterSection.masterCategoryList,\r\n    categoryList: state.filterSection.categoryList,\r\n    zoneList: state.filterSection.zoneList,\r\n\r\n    hasFilterData: state.filterSection.hasFilterData,\r\n    filterType: state.filterSection.filterType,\r\n    filterData: state.filterSection.filterData\r\n});\r\n\r\nexport default connect(mapStateToProps, {fetchPlaces, updateSelectedPlace})(GoogleApiWrapper({\r\n    apiKey: 'AIzaSyA4eoMwXF6WHOWLartYfDtKXKdOMotsBYQ'\r\n})(MapContainer));","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport InfoSection from './components/infoSection/infoSection';\nimport FilterSection from './components/filterSection/filterSection';\nimport MapContainer from './components/mapContainer/mapContainer';\nimport './App.css';\n\nclass App extends Component {\n\n  isMobile() {\n    return (window.innerHeight / window.innerWidth) > 1.6;\n  }\n\n  render() {\n\n    if(this.isMobile()) {\n      return (\n        <Provider store={store}>\n          <div className=\"main-section-sp\">\n            <div className=\"map-section-sp\"> <MapContainer/> </div>\n            <div className=\"side-section-sp\">\n                <div className=\"display-section-sp\"> <InfoSection/> </div>\n                <div className=\"filter-section-sp\"> <FilterSection/> </div>\n            </div>\n          </div>\n        </Provider>\n      );\n    }\n    return (\n      <Provider store={store}>\n        <div className=\"main-section\">\n          <div className=\"side-section\">\n              <div className=\"display-section\"> <InfoSection/> </div>\n              <div className=\"filter-section\"> <FilterSection/> </div>\n          </div>\n          <div> <MapContainer/> </div>\n        </div>\n      </Provider>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}